package service

import (
	"XPROJECTNAMEX/db/entity"
	"XPROJECTNAMEX/db/repository"
	"log"
	"unicode"
)

type UserService struct {
    UserRepository repository.UserRepository
}

func NewUserService(userRepository repository.UserRepository) *UserService {
    return &UserService{
        UserRepository: userRepository,
    }
}

func (s *UserService) GetAllUsers() ([]entity.User, error) {
    users, err := s.UserRepository.GetAll()

    if err != nil{
        log.Fatal(err)
    }

    /*
        added some example business logic 
        filters users that has nummeric chars, sql example query file in entity user
    */
    var userFiltered []entity.User

    for _ , user := range users{
        if(!HasSpecialCharacters(user.Name)){
            userFiltered = append(userFiltered, user)
        }
    }

    return userFiltered, nil
}

func HasSpecialCharacters(s string) bool {
    if s == ""{
        return true
    }

    for _, char := range s {
		if unicode.IsDigit(char) || unicode.IsControl(char) || unicode.IsSymbol(char) {
			return true
		}
	}

	return false
}